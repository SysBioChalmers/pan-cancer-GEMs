factor  <- df$groups
table(factor)
source("../src/filterCGDBdata.R")
source("../src/removenonfiniteGAGsamples.R")
df      <- filterCGDBdata(data,conditions,status,excludeNED,cohort,overridefactor="Primary_neoplastic_diseases_supergroup")
df      <- removenonfiniteGAGsample(df,fluid,gagclass)
factor  <- df$groups
table(factor)
source("../src/extractGAGdata.R")
GAG.data <- extractGAGdata(df,fluid,gagclass)
library(NMF)
nmffit <- nmf(t(GAG.data),
rank=length(unique(df$Primary_neoplastic_diseases_supergroup)),
method="brunet", seed="ica")
summary(nmffit, class = factor)
s <- extractFeatures(nmffit)
str(s)
s
head(t(GAG.data))
featureScore(nmffit)
s <- extractFeatures(nmffit,5)
str(s)
color <- colorRampPalette(brewer.pal(8,"Set2"))(nlevels(factor))
library(ade4)
library(RColorBrewer)
color <- colorRampPalette(brewer.pal(8,"Set2"))(nlevels(factor))
estim.r <- nmf(t(GAG.data),rank =  2:6,method="brunet", seed="ica", nrun = 10, seed = 1987)
estim.r <- nmf(t(GAG.data),rank =  2:6,method="brunet", nrun = 10, seed = 1987)
plot(estim.r)
?plot
?plot.NMF.rank
estim.r
plot.r  <- plot(estim.r)
plot.r
consensusmap(estim.r)
consensusmap(estim.r, annCol = factor, labCol = NA, labRow = NA)
estim.r <- nmf(t(GAG.data),rank =  3:5,method="brunet", nrun = 10, seed = 1987)
consensusmap(estim.r, annCol = factor, labCol = NA, labRow = NA)
GAG.random <- randomize(t(GAG.data))
GAG.random <- randomize(t(GAG.data))
estim.r.random <- nmf(GAG.random, 3:5, nrun = 10, seed = 1987)
estim.r.random <- nmf(GAG.random, 3:5, nrun = 10, seed = 1987)
plot(estim.r, estim.r.random)
res.multi.method <- nmf(t(GAG.data), 3, list("brunet", "lee", "ns"), seed = 1987)
plot(res.multi.method)
compare(res.multi.method)
compare(res.multi.method,class=factor)
?basismap,
?basismap
res.multi.method
nmffit <- nmf(t(GAG.data),rank =  3,method="ns", seed = 1987)
plot(nmffit)
nmffit <- nmf(t(GAG.data),rank =  3,method="ns", seed = 1987)
plot(nmffit)
summary(nmffit, class = factor)
s <- extractFeatures(nmffit,5)
str(s)
w <- basis(nmffit)
hwad(w)
head(w)
basismap(nmffit)
basismap(nmffit)
basismap(nmffit)
?basismap
basismap(nmffit,tracks=factor)
basismap(nmffit,tracks=T)
h <- coef(nmffit)
head(h)
s.class(h[1:2,],factor,col = color,axesell = F,cstar = 1,label = levels(factor),clabel = 0.4,cellipse = 0,sub="ICA components")
h[1:2,]
s.class(t(h[1:2,]),factor,col = color,axesell = F,cstar = 1,label = levels(factor),clabel = 0.4,cellipse = 0,sub="ICA components")
s.class(t(h[2:3,]),factor,col = color,axesell = F,cstar = 1,label = levels(factor),clabel = 0.4,cellipse = 0,sub="NMF components")
s.class(t(h[c(1,3),]),factor,col = color,axesell = F,cstar = 1,label = levels(factor),clabel = 0.4,cellipse = 0,sub="NMF components")
s.class(t(h[c(1,2),]),factor,col = color,axesell = F,cstar = 1,label = levels(factor),clabel = 0.4,cellipse = 0,sub="NMF components")
basismap(nmffit,tracks=T)
s.class(t(h[c(1,2),]),factor,col = color,axesell = F,cstar = 1,label = levels(factor),clabel = 0.4,cellipse = 0,sub="NMF components")
library(knitr)
opts_knit$set(root.dir=normalizePath(params$run_directory))
source("../src/loadCGDBdata.R")
source("../src/checkCGDBdata.R")
data <- loadCGDBdata(paste0("../data/report_",params$report_id,".txt"))
data <- checkCGDBdata(data,removereplicates = T,removelongitudinal = T,expandClinical = T,expandGAG = F)
head(data)
devtools::install_github("varemo/piano", ref="feature_exploreGSAres")
source('~/OneDrive - Elypta/Clinical/gags/cohorts/FGO87/docs/powerest/main.R')
ORR     <- (nA.PDL1*pA.PDL1+ nB.PDL1*pB.PDL1)/(nA.PDL1+nN.PDL1) #Should match 58%
ORR     <- (nA.PDL1*pA.PDL1+ nB.PDL1*pB.PDL1)/(nA.PDL1+nB.PDL1) #Should match 58%
pA    <- pA.PDL1 #Proportion response in group A at least as good as PDL1
pB    <- pB.PDL1 #Proportion response in group B at least as good as PDL1
(nB <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2)
ceiling(nB) # 70
z <- (pA-pB)/sqrt(pA*(1-pA)/nB/kappa+pB*(1-pB)/nB)
(Power <- pnorm(z-qnorm(1-alpha/2))+pnorm(-z-qnorm(1-alpha/2)))
source('~/OneDrive - Elypta/Clinical/gags/cohorts/FGO87/docs/powerest/main.R')
source('~/OneDrive - Elypta/Clinical/gags/cohorts/FGO87/docs/powerest/main.R')
source('~/OneDrive - Elypta/Clinical/gags/cohorts/FGO87/docs/powerest/main.R')
kappa <- ORR/(1-ORR)    #nA/nB  is the matching ratio (1/ORR => GAG score cutoff is optimal)
pA    <- pA.PDL1 #Proportion response in group A at least as good as PDL1
pB    <- ORR + kappa*(ORR-pA) #Proportion response in group B depends on ORR
ORR.chk     <- (nA*pA+ nB*pB)/(nTOT) #Should match ORR
source('~/OneDrive - Elypta/Clinical/gags/cohorts/FGO87/docs/powerest/main.R')
41/52
11/52
52*0.60
31/52
21/52
0.59/0.40
kappa <- ORR/(1-ORR)    #nA/nB  is the matching ratio (1/ORR => GAG score cutoff is optimal)
pA    <- pA.PDL1 #Proportion response in group A at least as good as PDL1
pB    <- 0.15    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR)/(ORR - pB)
kappa <- (pB - ORR)/(ORR - pA)
kappa <- (pB - ORR)/(ORR - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
pA    <- 0.50 #Proportion response in group A at least as good as PDL1
pB    <- 0.15    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR)/(ORR - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
pA    <- 0.60 #Proportion response in group A at least as good as PDL1
pB    <- 0.15    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR)/(ORR - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
pA    <- pA.PDL1 #Proportion response in group A at least as good as PDL1
pB    <- 0.15    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR)/(ORR - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
alpha <- 0.05 #Type I error
beta  <- 0.20 #Type II error => 1 - beta is power
(nB <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2)
nB    <- ceiling(nB) # 70
nA    <- kappa*nB
nA    <- ceiling(nA) # 70
(nB <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2)
nB <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2
nB    <- ceiling(nB) # 70
nA    <- kappa*nB
nA    <- ceiling(nA) # 70
nTOT  <- nA + nB
ORR.chk     <- (nA*pA+ nB*pB)/(nTOT) #Should match ORR
z <- (pA-pB)/sqrt(pA*(1-pA)/nB/kappa+pB*(1-pB)/nB)
(Power <- pnorm(z-qnorm(1-alpha/2))+pnorm(-z-qnorm(1-alpha/2)))
responders <- c(pA*nA,pB*nB)
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
prop.test(responders, patients)
source('~/OneDrive - Elypta/Clinical/gags/cohorts/FGO87/docs/powerest/main.R')
prop.test(responders, patients)
pA.GAG <- 0.50 #ORR in GAG-low
pB.GAG <- 0.15 #ORR in GAG-high
nA.GAG <- 8
nB.GAG <- 7
ORR    <- (nA.GAG*pA.GAG+ nB.GAG*pB.GAG)/(nA.GAG+nB.GAG) #Should match 58%
pA.GAG*(ORR.avelo/ORR.sunitinb)
ORR.avelo      <- (nA.PDL1*pA.PDL1+ nB.PDL1*pB.PDL1)/(nA.PDL1+nB.PDL1) #Should match 58%
pA.GAG*(ORR.avelo/ORR.sunitinb)
ORR.sunitinb    <- (nA.GAG*pA.GAG+ nB.GAG*pB.GAG)/(nA.GAG+nB.GAG) #Should match 58%
pA.GAG*(ORR.avelo/ORR.sunitinb)
pB.GAG*(ORR.avelo/ORR.sunitinb)
pA    <- pA.GAG*(ORR.avelo/ORR.sunitinb)    #Proportion response in group A is equal to "Low"-GAG score in sunitinib cohort
pB    <- pB.GAG*(ORR.avelo/ORR.sunitinb)    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR.avelo)/(ORR.avelo - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
pA    <- pA.GAG*(ORR.avelo/ORR.sunitinb)    #Proportion response in group A is equal to "Low"-GAG score in sunitinib cohort
pB    <- pB.GAG*(ORR.avelo/ORR.sunitinb)    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR.avelo)/(ORR.avelo - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
alpha <- 0.05 #Type I error
beta  <- 0.20 #Type II error => 1 - beta is power
nB    <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2
nB    <- ceiling(nB) # 70
nA    <- kappa*nB
nA    <- ceiling(nA) # 70
nTOT  <- nA + nB
ORR.chk     <- (nA*pA+ nB*pB)/(nTOT) #Should match ORR
z <- (pA-pB)/sqrt(pA*(1-pA)/nB/kappa+pB*(1-pB)/nB)
(Power <- pnorm(z-qnorm(1-alpha/2))+pnorm(-z-qnorm(1-alpha/2)))
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
prop.test(responders, patients)
patients   <- c(nA,nB)
nB    <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2
nB    <- ceiling(nB) # 70
nA    <- kappa*nB
nA    <- ceiling(nA) # 70
nTOT     <- nA + nB
pA    <- pA.PDL1#pA.GAG*(ORR.avelo/ORR.sunitinb)    #Proportion response in group A is equal to "Low"-GAG score in sunitinib cohort
pB    <- pB.PDL1#pB.GAG*(ORR.avelo/ORR.sunitinb)    #Proportion response in group B is equal to "High"-GAG score in sunitinib cohort
kappa <- (pB - ORR.avelo)/(ORR.avelo - pA) #nA/nB  is the matching ratio (if pA and pB are fixed, this descends from ORR)
alpha <- 0.05 #Type I error
beta  <- 0.20 #Type II error => 1 - beta is power
nB       <- (pA*(1-pA)/kappa+pB*(1-pB))*((qnorm(1-alpha/2)+qnorm(1-beta))/(pA-pB))^2
nB       <- ceiling(nB) # 70
nA       <- kappa*nB
nA       <- ceiling(nA) # 70
nTOT     <- nA + nB
ORR.chk  <- (nA*pA+ nB*pB)/(nTOT) #Should match ORR
z <- (pA-pB)/sqrt(pA*(1-pA)/nB/kappa+pB*(1-pB)/nB)
(Power <- pnorm(z-qnorm(1-alpha/2))+pnorm(-z-qnorm(1-alpha/2)))
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
prop.test(responders, patients)
nB       <- ceiling(nB)/2 # 70
nA       <- kappa*nB
nA       <- ceiling(nA) # 70
nTOT     <- nA + nB
ORR.chk  <- (nA*pA+ nB*pB)/(nTOT) #Should match ORR
z <- (pA-pB)/sqrt(pA*(1-pA)/nB/kappa+pB*(1-pB)/nB)
(Power <- pnorm(z-qnorm(1-alpha/2))+pnorm(-z-qnorm(1-alpha/2)))
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
prop.test(responders, patients)
pA <- seq(pA.PDL1,pA.GAG*(ORR.avelo/ORR.sunitinb),by=0.01)
pA <- seq(pA.PDL1,pA.GAG*(ORR.avelo/ORR.sunitinb),by=0.05)
pB <- seq(pB.GAG*(ORR.avelo/ORR.sunitinb),pB.PDL1,by=0.05)
expand.grid(pA,pB)
pA <- seq(pA.PDL1,pA.GAG*(ORR.avelo/ORR.sunitinb),by=0.05)
pB <- seq(pB.GAG,,pB.PDL1,by=0.05)
p  <- expand.grid(pA,pB)
p
pB <- seq(pB.GAG,pB.PDL1,by=0.05)
p  <- expand.grid(pA,pB)
p
nB <- seq(5,40,by=5)
p  <- expand.grid(pA,pB.nB)
p  <- expand.grid(pA,pB,nB)
p
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = kappa*nB,
nTOT  = nA + nB)
library(dplyr)
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = kappa*nB,
nTOT  = nA + nB)
colnames(p) <- c("pA","pB","nB")
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = kappa*nB,
nTOT  = nA + nB)
p
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = ceiling(kappa*nB),
nTOT  = nA + nB)
p
head(p)
res <- prop.test(responders, patients)
res$p.value
calcproptest <- function(pA,nA,pB,nB){
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
pA <- seq(pA.PDL1,pA.GAG*(ORR.avelo/ORR.sunitinb),by=0.05) #Prob of response in group A is as little as PDL1 to max in suniti
pB <- seq(pB.GAG,pB.PDL1,by=0.05)                          #Prob of response in group B is as min as in sunit to as little as PDL1
nB <- seq(5,40,by=5)
p  <- expand.grid(pA,pB,nB)
colnames(p) <- c("pA","pB","nB")
calcproptest <- function(pA,nA,pB,nB){
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = ceiling(kappa*nB),
nTOT  = nA + nB,
tIE   =calcproptest(pA,nA,pB,nB)
)
p
calcproptest(pA,nA,pB,nB)
head(p)
calcproptest(0.66,36,0.15,5)
apply(p,1,calcproptest,pA,nA,pB,nB)
with(p,calcproptest,pA,nA,pB,nB)
calcproptest <- function(p){
pA <- p$pA
pB <- p$pB
nA <- p$nA
nB <- p$nB
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
apply(p,1,calcproptest)
calcproptest <- function(pA,nA,pB,nB){
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
calcproptest <- function(p){
pA <- p["pA"]
pB <- p["pB"]
nA <- p["nA"]
nB <- p["nB"]
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
apply(p,1,calcproptest)
pA <- seq(pA.PDL1,pA.GAG*(ORR.avelo/ORR.sunitinb),by=0.05) #Prob of response in group A is as little as PDL1 to max in suniti
pB <- seq(pB.GAG,pB.PDL1,by=0.05)                          #Prob of response in group B is as min as in sunit to as little as PDL1
nB <- seq(5,40,by=5)
p  <- expand.grid(pA,pB,nB)
colnames(p) <- c("pA","pB","nB")
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = ceiling(kappa*nB),
nTOT  = nA + nB
)
calcproptest <- function(p){
pA <- p["pA"]
pB <- p["pB"]
nA <- p["nA"]
nB <- p["nB"]
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
p$tiE <- apply(p,1,calcproptest)
p
library(ggplot2)
ggplot(data=p,aes(x=nTOT,y=tiE,color=pA)) + geom_line()
ggplot(data=p,aes(x=nTOT,y=tiE,color=pA)) + geom_line() + facet_grid(~pB)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA))) + geom_line() + facet_grid(~pB)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line() +
facet_grid(~pB*100) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line() +
facet_grid(~pB*100) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line() +
facet_grid(~pB) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line() +
facet_grid(~pB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=2) +
facet_grid(~pB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~pB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2")
pA <- seq(pA.PDL1,pA.GAG*(ORR.avelo/ORR.sunitinb),by=0.1) #Prob of response in group A is as little as PDL1 to max in suniti
pB <- seq(pB.GAG,pB.PDL1,by=0.1)                          #Prob of response in group B is as min as in sunit to as little as PDL1
nB <- seq(5,20,by=5)
p  <- expand.grid(pA,pB,nB)
colnames(p) <- c("pA","pB","nB")
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = ceiling(kappa*nB),
nTOT  = nA + nB
)
calcproptest <- function(p){
pA <- p["pA"]
pB <- p["pB"]
nA <- p["nA"]
nB <- p["nB"]
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
p$tiE <- apply(p,1,calcproptest)
library(ggplot2)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~pB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~pB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14)) +
scale_color_brewer("GAG-response responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~pB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
p$faectpB <- paste("GAG-resistance group responses (%):",pB)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~faectpB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
p
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~factor(faectpB)) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~factor(faectpB)) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
p  <- expand.grid(pA,pB,nB)
colnames(p) <- c("pA","pB","nB")
p  <- mutate(p,
kappa = (pB - ORR.avelo)/(ORR.avelo - pA),
nA    = ceiling(kappa*nB),
nTOT  = nA + nB
)
calcproptest <- function(p){
pA <- p["pA"]
pB <- p["pB"]
nA <- p["nA"]
nB <- p["nB"]
responders <- c(round(pA*nA),round(pB*nB))
patients   <- c(nA,nB)
res <- prop.test(responders, patients)
tIe <- res$p.value
tIe
}
p$tiE <- apply(p,1,calcproptest)
p$facetpB <- paste("GAG-resistance group responses (%):",pB)
library(ggplot2)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~factor(facetpB)) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
p
p$facetpB
p$facetpB <- factor(paste("GAG-resistance group responses (%):",pB))
p$facetpB
library(ggplot2)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~facetpB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
p
p$facetpB <- factor(paste("GAG-resistance group responses (%):",p$pB))
library(ggplot2)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~facetpB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
p$pB*100
p$facetpB <- factor(paste("GAG-resistance group responses:",p$pB*100,"%"))
library(ggplot2)
ggplot(data=p,aes(x=nTOT,y=tiE,color=factor(pA*100))) +
geom_line(size=1.5) +
facet_grid(~facetpB) + geom_hline(yintercept = 0.05) +
theme_bw()+ theme(text=element_text(size=14),legend.position = "bottom") +
scale_color_brewer("GAG-response group responses (%)",palette = "Set2") +
xlab("Sample size") + ylab("Type I error")
ct <- c(rep("COAD",2),rep("LUAD,2"))
ct
ct <- c(rep("COAD",2),rep("LUAD",2))
ct
model.matrix(~ct)
hm <- c("H","R","H","R")
model.matrix(~ct+hm)
model.matrix(~ct+hm+ct:hm)
t.test(rand(5),mu = 0)
t.test(sample(5),mu = 0)
sample(5)
voom
library(limma)
voom
load("~/Documents/Academia/Projects/pan-cancer-GEMs/data/pvals_TCGA.rda")
head(pvals)
pP <- t(pvals)
ENSG <- rownames(pvals)
setwd("~/Documents/Academia/Projects/pan-cancer-GEMs/data")
write.table(pP,file="pvals_TCGA_BLCA.txt",sep="\t")
max(pP)
sum(pP[,1]>0.99)
sum(pP[,1]>0.98)
sum(pP[,1]>0.96)
sum(pP[1,]>0.98)
sum(pP[1,]>0.99)
sum(pP[1,]>0.98)
sum(pP[1,]>0.95)
pP <- pP[1:5,]
write.table(pP,file="pvals_TCGA_BLCA_N5.txt",sep="\t")
pP <- pP[1:5,1:10]
write.table(pP,file="pvals_TCGA_BLCA_N5.txt",sep="\t")
write.table(pP,file="pvals_TCGA_BLCA_N5.txt",sep="\t",row.names = F)
write.csv(pP,file="pvals_TCGA_BLCA_N5.csv",row.names = F,col.names = F)
