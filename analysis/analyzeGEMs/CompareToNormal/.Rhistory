head(m)
o <- data.frame("PSID"=m$Var1,"Gene"=m$Var2,"E"=m$value,"Included"=n$value)
head(o)
ggplot(o,aes(x=E,fill=Included)) + geom_density()
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.3) +  ylab("Density") +
xlab("Size-adjusted log-cpm") + theme_bw
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.3) +  ylab("Density") +
xlab("Size-adjusted log-cpm") + theme_bw()
ggplot(subset(o,Included==1),aes(x=E,fill=PSID)) + geom_density() +
geom_density(alpha=.3) +  ylab("Density") +
xlab("Size-adjusted log-cpm") + theme_bw()
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.3) +  ylab("Density") +
xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot() +
geom_density(subset(o,Included==1),aes(x=E,fill=factor(PSID))),alpha=.3) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot() +
geom_density(subset(o,Included==1),aes(x=E,fill=factor(PSID)),alpha=.3) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3) +
scale_fill_brewer(palette="Blues") +
# geom_density(data=subset(o,Included==0),
# aes(x=E,fill=factor(PSID)),alpha=.3) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
# geom_density(data=subset(o,Included==0),
# aes(x=E,fill=factor(PSID)),alpha=.3) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
?scale_fill_gradient
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_gradient() +
# geom_density(data=subset(o,Included==0),
# aes(x=E,fill=factor(PSID)),alpha=.3) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
?scale_fill_brewer
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
geom_density(data=subset(o,Included==0),
aes(x=E,fill=factor(PSID)),alpha=.3) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
?scale_fill_manual
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==0),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
geom_density(data=subset(o,Included==0),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="RdBu") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
cols <- colorRampPalette(brewer.pal(11,"RdBu"))(ncol(o))
head(cols)
cols <- colorRampPalette(brewer.pal(11,"Blues"))(ncol(o))
cols[o$Included==0] <- colorRampPalette(brewer.pal(11,"Reds"))(ncol(o))
cols[o$Included==0] <- colorRampPalette(brewer.pal(11,"Reds"))(sum(o$Included==0))
cols <- colorRampPalette(brewer.pal(11,"Blues"))(ncol(o))
cols <- colorRampPalette(brewer.pal(9,"Blues"))(ncol(o))
cols[o$Included==0] <- colorRampPalette(brewer.pal(9,"Reds"))(sum(o$Included==0))
head(cols)
cols <- colorRampPalette(brewer.pal(9,"Blues"))(ncol(o))
head(cols)
cols <- colorRampPalette(brewer.pal(9,"Blues"))(nrow(o))
cols[o$Included==0] <- colorRampPalette(brewer.pal(9,"Reds"))(sum(o$Included==0))
head(cols)
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
geom_density(data=subset(o,Included==0),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_manual(cols) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==1),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==0),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
##Per sample
ggplot() +
geom_density(data=subset(o,Included==1)[1:9,],
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==0)[1:9,],
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==1)[1:9,],
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
subset(o,Included==1)[1:9,]
unique(o$PSID)
random          <- sample(x=1:length(unique(o$PSID)),unique(o$PSID),F)
random
random          <- sample(unique(o$PSID),9,F)
random
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
PSID.random <- sample(unique(o$PSID),9,F)
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
PSID.random <- sample(unique(o$PSID),9,F)
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
set.seed(1111)
PSID.random <- sample(unique(o$PSID),9,F)
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==0 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
cols        <- c(brewer.pal(9,"Blues"),brewer.pal(9,"Blues"))
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
geom_density(data=subset(o,Included==0 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_manual(cols) +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
##Per sample
set.seed(1111)
PSID.random <- sample(unique(o$PSID),9,F)
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==0 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15)
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15) +
ggsave(filename = "Eleveldens_Incl_xmodels.pdf",
width=10,height=6))
ggplot() +
geom_density(data=subset(o,Included==1 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Blues") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15) +
ggsave(filename = "Eleveldens_Incl_xmodels.pdf",
width=10,height=6)
ggplot() +
geom_density(data=subset(o,Included==0 & PSID %in% PSID.random),
aes(x=E,fill=factor(PSID)),alpha=.3,size=0) +
scale_fill_brewer(palette="Reds") +
ylab("Density") + xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15) +
ggsave(filename = "Eleveldens_Excl_xmodels.pdf",
width=10,height=6)
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.3) +  ylab("Density") +
scale_fill_manual(c(brewer.pal(9,"Reds")[5],brewer.pal(9,"Blues")[5]))
xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.3) +  ylab("Density") +
scale_fill_manual(values=c(brewer.pal(9,"Reds")[5],
brewer.pal(9,"Blues")[5]))
xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
##Per sample
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.3,size=0) +  ylab("Density") +
scale_fill_manual(values=c(brewer.pal(9,"Reds")[5],
brewer.pal(9,"Blues")[5])) +
xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none")
ggplot(o,aes(x=E,fill=factor(Included))) + geom_density() +
geom_density(alpha=.5,size=0) +  ylab("Density") +
scale_fill_manual(values=c(brewer.pal(9,"Reds")[5],
brewer.pal(9,"Blues")[5])) +
xlab("Size-adjusted log-cpm") + theme_bw() +
theme(legend.position="none") + ylim(0,0.3) + xlim(-5,15) +
ggsave(filename = "Eleveldens_Excl_allmodels.pdf",
width=10,height=6)
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
###Compute similarity between models and cluster
rm(list=ls())
setwd("~/Box Sync/3rd Semester (May 2013 - November 2013)/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity")
require(ConsensusClusterPlus)
require(doMC)
require(glmnet)
library(gplots)
require(randomForest)
require(RColorBrewer)
library(ROCR)
library(stringdist)
#Load and params
load("../../data/annotation.RData")
load("../../data/preprocessed.RData")
HMR2.rxnTable  <- read.delim("../../docs/cHMR3765_rxnTable.txt")
HMR2.gpr           <- read.delim("../../docs/cHMR3765_rxnGeneMatrix.txt")
rownames(HMR2.gpr) <-HMR2.gpr[,1]
HMR2.gpr       <- HMR2.gpr[,-c(1,ncol(HMR2.gpr))]
elIncMatFiles  <- c("../rxnInclMat.txt")#,"../geneInclMat.txt","../metInclMat.txt")
geneIncMatFile <- c("../geneInclMat.txt")#,"../geneInclMat.txt","../metInclMat.txt")
geneInclMat        <- read.delim(geneIncMatFile,header=T,sep="\t",row.names=1,allowEscapes=T)
geneInclMat        <- geneInclMat[,-grep("X.1",colnames(geneInclMat))]
registerDoMC(cores=4)
elIncMatFile  <- c("../rxnInclMat.txt")#,"../geneInclMat.txt","../metInclMat.txt")
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
el <- strsplit(strsplit(elIncMatFile,"/")[[1]][2],"I")[[1]][1]
elInclMat <- read.delim(elIncMatFile,header=T,sep="\t",row.names=1,allowEscapes=T)
head(elInclMat)
elInclMat[[el]] <- elInclMat[,-grep("X.1",colnames(elInclMat))]
rxnInclMat   <- elInclMat[["rxn"]]
head(rxnInclMat)
pcaElInclMatrix(elIncMatFile)
fGlobalCT.m
#Create a factor
PSID         <- rownames(y$samples)
PSID.m       <- colnames(rxnInclMat)
PSID.s       <- gsub(pattern="-",replacement=".",x=PSID)
filter       <- PSID.s%in%PSID.m
mapper       <- match(PSID.m,PSID.s[filter])
fGlobalCT.m  <- fGlobalCT[filter][mapper]
names(fGlobalCT.m)  <- PSID.s[filter][mapper]
fGlobalCT.m
head(rxnInclMat)
colnames(rxnInclMat)%in%names(fGlobalCT.m)
all(colnames(rxnInclMat)%in%names(fGlobalCT.m))
#PCA
E.pca  <- dudi.pca(t(rxnInclMat),center=T,scale=FALSE,scan=FALSE)
totVar <- sum(E.pca$eig)
var1   <- E.pca$eig[1]/totVar*100
var2   <- E.pca$eig[2]/totVar*100
s.class(E.pca$li,fGlobalCT.m,cpoint=1,
col=brewer.pal(nCancerTypes,"Set3"),
label=toupper(levels(fGlobalCT.m)))
nCancerTypes <-nlevels(fGlobalCT.m)
s.class(E.pca$li,fGlobalCT.m,cpoint=1,
col=brewer.pal(nCancerTypes,"Set3"),
label=toupper(levels(fGlobalCT.m)))
display.brewer.all()
text(15,1,var1)
text(15,1,paste0(round(var1,1),"%")
text(15,1,paste0(round(var1,1),"%"))
s.class(E.pca$li,fGlobalCT.m,cpoint=1,
col=brewer.pal(nCancerTypes,"Set3"),
label=toupper(levels(fGlobalCT.m)))
text(15,1,paste0(round(var1,1),"%"))
round(var1,1)
text(10,1,paste0(round(var1,1),"%"))
text(12,1,paste0(round(var1,1),"%"))
text(12,0.5,paste0(round(var1,1),"%"))
text(0.5,12,paste0(round(var1,1),"%"),pos = 2)
text(0.5,12,paste0(round(var1,1),"%"),angle=90)
?text
text(0.5,12,paste0(round(var1,1),"%"),srt=90)
text(-0.5,12,paste0(round(var1,1),"%"),srt=90)
#PCA
E.pca  <- dudi.pca(t(rxnInclMat),center=T,scale=FALSE,scan=FALSE)
totVar <- sum(E.pca$eig)
var1   <- E.pca$eig[1]/totVar*100
var2   <- E.pca$eig[2]/totVar*100
s.class(E.pca$li,fGlobalCT.m,cpoint=1,
col=brewer.pal(nCancerTypes,"Set3"),
label=toupper(levels(fGlobalCT.m)))
text(12,0.5,paste0(round(var1,1),"%"))
text(-0.5,12,paste0(round(var2,1),"%"),srt=90)
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
setwd("~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity")
source("pcaElInclMatrix.R")
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(2,1))
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(2,1))
pcaElInclMatrix(rxnInclMat)
pcaElInclMatrix(geneInclMat)
par(mfrow=c(1,1))
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
#PCA
par(mfrow=c(2,1))
pcaElInclMatrix(geneInclMat)
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(1,1))
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
#PCA
par(mfrow=c(2,1))
pcaElInclMatrix(geneInclMat)
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(1,1))
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
#PCA
par(mfrow=c(2,1))
pcaElInclMatrix(geneInclMat)
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(1,1))
brewer.pal(13,"Set3")
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
par(mfrow=c(2,1))
pcaElInclMatrix(geneInclMat)
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(1,1))
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
par(mfrow=c(2,1))
pcaElInclMatrix(geneInclMat)
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(1,1))
source('~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/ModelSimilarity/pcaElInclMatrix.R')
par(mfrow=c(2,1))
pcaElInclMatrix(geneInclMat)
pcaElInclMatrix(rxnInclMat)
par(mfrow=c(1,1))
Compare core-pan with housekeeping proteome, core-iso with tissue-enriched proteome,
#and cntx-clust with group enriched proteome
rm(list=ls())
setwd("~/Documents/Academia/Projects/RxnLands/Codes/analyzeGEMs/CompareToNormal")
require(VennDiagram)
require(gplots)
require(RColorBrewer)
#Load
load("../../data/annotation.RData")
load("../../data/preprocessed.RData")
absn       <- read.delim("../RxnsCoreVsPan/rxns_absn.txt",stringsAsFactors=F)
absn <- absn$RxnID
cntx_clust <- readLines("../RxnsCoreVsPan/rxns_cntx_clust.txt")
core_pan   <- readLines("../RxnsCoreVsPan/rxns_core_pan.txt")
core_iso   <- readLines("../RxnsCoreVsPan/rxns_core_iso.txt")
hpa.hk     <- read.delim("../../data/tissue_specificity_rna-any_expressed.tab",stringsAsFactors=F)
hpa.mix    <- read.delim("../../data/tissue_specificity_rna-any_Mixed.tab",stringsAsFactors=F)
hpa.all    <- read.delim("../../data/rna.csv",stringsAsFactors=T,sep = ",")
HMR2.gpr   <- read.delim("../../docs/cHMR3765_rxnGeneMatrix.txt")
rownames(HMR2.gpr)<-HMR2.gpr[,1]
HMR2.gpr    <- HMR2.gpr[,-c(1,ncol(HMR2.gpr))]
geneIncMatFile    <- c("../geneInclMat.txt")
geneInclMat       <- read.delim(geneIncMatFile,header=T,sep="\t",row.names=1,allowEscapes=T)
HMR2.rxnTable <- read.delim("../../data/cHMR3765_rxnTable.txt",stringsAsFactors=F)
geneInclMat   <- geneInclMat[,-grep("X.1",colnames(geneInclMat))]
metgenes.EC   <- readLines("../../docs/ECdefinedMetGenes_HMR3765.txt")
rxnIncMatFile     <- c("../rxnInclMat.txt")
rxnInclMat        <- read.delim(rxnIncMatFile,header=T,sep="\t",row.names=1,allowEscapes=T)
rxnInclMat  <- rxnInclMat[,-grep("X.1",colnames(rxnInclMat))]
#Param
percSampleWRxns          <- 0.95
arbitrary.threshold.rank <- 10
maxngpr.rxnint           <- 1
hpa.core.defin           <- "both"
#1: Preprocess
PSID.m        <- colnames(geneInclMat)
lib.size          <- with(y$samples, lib.size * norm.factors)
E                 <- t(log2(t(y$counts + 0.5)/(lib.size + 1) * 1e+06))
E.ensg            <- E
colnames(E.ensg)  <- gsub(pattern="-",replacement=".",x=colnames(E.ensg))
rownames(E.ensg)  <- annotEntrez[rownames(E),"ensembl_gene_id"]
genes.ensg.common <- intersect(rownames(E.ensg),rownames(geneInclMat)) #This is the reference metabolic genome
geneInclMat.c     <- geneInclMat[genes.ensg.common,]
genes.ensg.m      <- rownames(geneInclMat.c[which(apply(geneInclMat.c!=0,1,any)),])
E.ensg.c          <- E.ensg[genes.ensg.common,] #n common genes x nS (1082)
PSID         <- rownames(y$samples)
PSID.s       <- gsub(pattern="-",replacement=".",x=PSID)
filter       <- PSID.s%in%colnames(geneInclMat)
mapper       <- match(colnames(geneInclMat),PSID.s[filter])
E.ensg.c.m   <- E.ensg.c[,filter][,mapper] #n common genes x nS in models (917)
###Above: the reference genome for the reconstructed models
#3: Classify HPA proteins
hpa.tissues    <- levels(hpa.all$Sample)[!grepl("[A-Z]",
levels(hpa.all$Sample))]
hpa.onlytissue <- hpa.all[hpa.all$Sample %in% hpa.tissues,]
hpa.abundxgene <- aggregate(Abundance~Gene,data=hpa.onlytissue,FUN = table,simplify = T)
min.ntissues   <- length(hpa.tissues)*(1-percSampleWRxns)
hpa.core.genes  <- hpa.abundxgene$Gene[hpa.abundxgene$Abundance
[,"Not detected"]<min.ntissues]
hpa.core.genes <- as.character(hpa.core.genes)
hpa.cntx.genes <- hpa.abundxgene$Gene[hpa.abundxgene$Abundance
[,"Not detected"]>min.ntissues &
hpa.abundxgene$Abundance
[,"Not detected"]<length(hpa.tissues)]
hpa.cntx.genes <- as.character(hpa.cntx.genes)
hpa.absn.genes <- hpa.abundxgene$Gene[hpa.abundxgene$Abundance
[,"Not detected"]==length(hpa.tissues)]
hpa.absn.genes <- as.character(hpa.absn.genes)
###Go metabolic
if (hpa.core.defin != "my"){#Use HPA or my or both way to define housekeeping?
hpa.hk.genes   <- hpa.hk$Ensembl[hpa.hk$Ensembl %in% genes.ensg.common]
hpa.mix.genes  <- hpa.mix$Ensembl[hpa.mix$Ensembl %in% genes.ensg.common]
hpa.core.genes.hpa  <- unique(c(hpa.hk.genes,hpa.mix.genes))
if (hpa.core.defin == "both"){
hpa.core.genes.my  <- hpa.core.genes[hpa.core.genes %in% genes.ensg.common]
hpa.core.genes     <- unique(c(hpa.core.genes.hpa,hpa.core.genes.my))
} else {hpa.core.genes <- hpa.core.genes.hpa}} else {
hpa.core.genes  <- hpa.core.genes[hpa.core.genes %in% genes.ensg.common]
}
hpa.absn.genes <- as.character(hpa.absn.genes[hpa.absn.genes %in% genes.ensg.common])
hpa.cntx.genes <- as.character(hpa.cntx.genes[hpa.cntx.genes %in% genes.ensg.common])
hpa.cntx.genes <- hpa.cntx.genes[!hpa.cntx.genes %in% hpa.core.genes]
hpa.unch.genes <- setdiff(genes.ensg.common,c(hpa.absn.genes,hpa.core.genes,hpa.cntx.genes))
#4: Classify reactions according to HPA
hpa.core.rxns <- rownames(HMR2.gpr)[apply(HMR2.gpr[,hpa.core.genes]!=0,1,any)]
hpa.cntx.rxns <- rownames(HMR2.gpr)[apply(HMR2.gpr[,hpa.cntx.genes]!=0,1,any)]
hpa.absn.rxns <- rownames(HMR2.gpr)[apply(HMR2.gpr[,hpa.absn.genes]!=0,1,any)]
hpa.unch.rxns <- rownames(HMR2.gpr)[apply(HMR2.gpr[,hpa.unch.genes]!=0,1,any)]
ncheckedrxns  <- sum(length(hpa.core.rxns)+length(hpa.cntx.rxns)+length(hpa.absn.rxns))
writeLines(hpa.core.rxns,"hpa_rxns_core.txt",sep = "\n")
writeLines(hpa.cntx.rxns,"hpa_rxns_cntx.txt",sep = "\n")
writeLines(hpa.absn.rxns,"hpa_rxns_absn.txt",sep = "\n")
writeLines(hpa.unch.rxns,"hpa_rxns_unch.txt",sep = "\n")
#5: Check how many core_pan rxns are core in HPA
core_pan <- c(core_pan,core_iso) #Core is core, regardless of gene assoc
core_pan <- core_pan[-which(core_pan=="HMR_8426")] #ARG1 is not core - just misannotated
only.core_pan          <- sum(!core_pan %in% hpa.core.rxns)
only.hpa.core          <- sum(!hpa.core.rxns %in% core_pan)
both.core_pan.hpa.core <- sum(core_pan %in% hpa.core.rxns)
not.core_pan.hpa.core  <- ncheckedrxns - both.core_pan.hpa.core
- only.core_pan - only.hpa.core
grid.newpage()
venn.plot   <- draw.pairwise.venn(length(core_pan),length(hpa.core.rxns),
both.core_pan.hpa.core,category=c("Core - pan",
"Housekeeping\nproteome"),fill=brewer.pal(11,"RdYlBu")[c(1,11)],
cat.pos=c(315,45),cat.dist=0.06,cat.cex=2,
cex=2)
grid.draw(venn.plot)
install.packages("VennDiagram", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
venn.plot   <- draw.pairwise.venn(length(core_pan),length(hpa.core.rxns),
both.core_pan.hpa.core,category=c("Core - pan",
"Housekeeping\nproteome"),fill=brewer.pal(11,"RdYlBu")[c(1,11)],
cat.pos=c(315,45),cat.dist=0.06,cat.cex=2,
cex=2)
library(VennDiagram)
grid.newpage()
venn.plot   <- draw.pairwise.venn(length(core_pan),length(hpa.core.rxns),
both.core_pan.hpa.core,category=c("Core - pan",
"Housekeeping\nproteome"),fill=brewer.pal(11,"RdYlBu")[c(1,11)],
cat.pos=c(315,45),cat.dist=0.06,cat.cex=2,
cex=2)
grid.draw(venn.plot)
only.core_pan
